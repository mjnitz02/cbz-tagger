name: Create Release on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  create-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Extract version from pyproject.toml
        id: get-version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"
      - name: Check if release exists
        id: check-release
        run: |
          RELEASE_EXISTS=$(gh release view "v${{ steps.get-version.outputs.version }}" --json tagName --jq '.tagName' 2>/dev/null || echo "")
          if [ -n "$RELEASE_EXISTS" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get-version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get-version.outputs.version }} does not exist"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        if: steps.check-release.outputs.exists == 'false'
        run: |
          gh release create "v${{ steps.get-version.outputs.version }}" \
            --title "${{ steps.get-version.outputs.version }}" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Skip Release Creation
        if: steps.check-release.outputs.exists == 'true'
        run: |
          echo "Skipping release creation - v${{ steps.get-version.outputs.version }} already exists"
