---
name: Create Release on Merge to Main
on:
  push:
    branches: [main]
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Extract version from pyproject.toml
        id: get-version
        run: |
          VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Found version: $VERSION"
      - name: Check if release exists
        id: check-release
        run: |
          RELEASE_EXISTS=$(gh release view "v${{ steps.get-version.outputs.version }}" --json tagName --jq '.tagName' 2>/dev/null || echo "")
          if [ -n "$RELEASE_EXISTS" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get-version.outputs.version }} already exists"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Release v${{ steps.get-version.outputs.version }} does not exist"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        if: steps.check-release.outputs.exists == 'false'
        run: |
          gh release create "v${{ steps.get-version.outputs.version }}" \
            --title "${{ steps.get-version.outputs.version }}" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Skip Release Creation
        if: steps.check-release.outputs.exists == 'true'
        run: |-
          echo "Skipping release creation - v${{ steps.get-version.outputs.version }} already exists"
      - name: Log in to Docker Hub
        if: steps.check-release.outputs.exists == 'false'
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        if: steps.check-release.outputs.exists == 'false'
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: mjnitz02/cbz_tagger
          tags: |
            type=semver,pattern={{version}},value=v${{ steps.get-version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=v${{ steps.get-version.outputs.version }}
            type=semver,pattern={{major}},value=v${{ steps.get-version.outputs.version }}
      - name: Build and push Docker image
        if: steps.check-release.outputs.exists == 'false'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
